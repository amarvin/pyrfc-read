# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
        cache-dependency-path: |
          **/setup.cfg
          **/requirements*.txt
    - name: Install dependencies
      env:
        SAPNWRFC_HOME: /usr/local/sap/nwrfcsdk
      run: |
        python -m pip install --upgrade pip
        pip install "Cython<3.0"
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Sort imports with isort
      run: isort . --check --color --diff
    - name: Code format with black
      run: black . --check --color --diff
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pflake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pflake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov=pyrfc_read --cov-report=xml
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
