# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    name: Build distribution üì¶
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine -r requirements.txt
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        if-no-files-found: error
        retention-days: 5
        path: dist/

  deploy:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs:
    - build
    runs-on: ubuntu-latest

    # Specifying a GitHub environment is optional, but strongly encouraged
    #environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4.1.7
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
